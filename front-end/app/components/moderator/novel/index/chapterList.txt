<template>
  <USlideover v-model:open="sidebarOpen" side="left">
    <template #content>
      <!-- <div v-if="pending" class="p-4 text-center">
        Đang tải...
      </div>
      <div v-else-if="error" class="p-4 text-red-500">
        {{ error }}
      </div> -->
      <div class="space-y-2 overflow-y-auto h-[calc(100vh-10px)] my-2">
        <div class="flex items-center justify-between mb-4 mx-1">
          <h3 class="font-semibold text-gray-900 dark:text-white">
            Danh sách chương
          </h3>
          <UBadge color="primary" variant="subtle">
            {{ pendingChapters.length }} chờ duyệt
          </UBadge>
        </div>
        <div
          v-for="chapter in chapters"
          :key="chapter._id"
          class="p-3 mx-2 rounded-lg border cursor-pointer transition-colors"
          :class="[
            currentChapter?._id === chapter._id
              ? 'border-primary-500 bg-primary-50 dark:bg-primary-900/20'
              : 'border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800'
          ]"
          @click="selectChapter(chapter)"
        >
          <div class="flex items-center justify-between mb-2">
            <span class="font-medium text-sm truncate max-w-[75%]">{{ chapter.title }}</span>
            <UBadge
              :color="getStatusColor(chapter.status)"
              :icon="getStatusIcon(chapter.status)"
              variant="subtle"
              size="xs"
            >
              {{ getStatusLabel(chapter.status) }}
            </UBadge>
          </div>
          <div class="flex items-center gap-2 sm:gap-4 text-xs text-gray-500">
            <span>{{ chapter.wordCount || 0 }} từ</span>
            <span>{{ formatDate(chapter.createdAt) }}</span>
          </div>
          <div v-if="(chapter.violation?.count ?? 0) > 0" class="flex items-center gap-1 mt-2">
            <UIcon name="i-lucide-alert-triangle" class="w-3 h-3 text-orange-500" />
            <span class="text-xs text-orange-600">{{ chapter.violation?.count ?? 0 }} vấn đề</span>
          </div>
        </div>
      </div>
    </template>
  </USlideover>
</template>

<script setup lang="ts">
// import { useChapters } from '~/composables/useChapters'
import { useStatus } from '~/composables/useStatus'
import type { Chapter } from '~/types/chapter'

const props = defineProps<{
  chapters: Chapter[]
  selectedChapterId?: string | null
  openSidebar: boolean
}>()

const emit = defineEmits<{
  (e: 'update:selectedChapter', chapter: Chapter): void
  (e: 'update:openSidebar', value: boolean): void
}>()

const { getStatusColor, getStatusLabel, getStatusIcon } = useStatus()
const chapters = ref<Chapter[]>(props.chapters)
// const { fetchChapters } = useChapters()

// Lấy danh sách chương
// const { data: chapters, pending: pending, error: error } = await fetchChapters(props.novelId)
const currentChapter = ref<Chapter | null>(null)
const sidebarOpen = computed({
  get: () => props.openSidebar,
  set: value => emit('update:openSidebar', value)
})

// Tính toán các chương chờ duyệt (bao gồm pending và in_review)
const pendingChapters = computed(() =>
  chapters.value.filter(ch => ['pending', 'in_review'].includes(ch.status))
)

// Đồng bộ currentChapter với selectedChapterId
watch(
  [() => props.selectedChapterId, chapters],
  ([newId, newChapters]) => {
    if (newId && newChapters) {
      const foundChapter = newChapters.find(ch => ch._id === newId)
      currentChapter.value = foundChapter || newChapters[0] || null
    } else if (newChapters && newChapters.length) {
      currentChapter.value = newChapters[0] || null // Chọn chương đầu tiên nếu không có ID, hoặc null nếu không có chương nào
    }
  },
  { immediate: true }
)

// Định dạng ngày
const formatDate = (date: string | Date) => {
  return new Date(date).toLocaleString('vi-VN', { dateStyle: 'short', timeStyle: 'short' })
}

// Chọn chương
const selectChapter = async (chapter: Chapter) => {
  try {
    currentChapter.value = chapter
    sidebarOpen.value = false
    // await fetchModeratorChapterById(chapter._id)
    emit('update:selectedChapter', chapter) // Phát sự kiện cho trang chính
  } catch (err) {
    console.error('Error selecting chapter:', err)
  }
}
</script>
